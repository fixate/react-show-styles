{"version":3,"file":"static/preview.66a42377c36476971a5a.bundle.js","sources":["webpack:///../src/ShowComputedStyles.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {RenderFn, IRenderFnParameter} from './types';\n\nexport interface IShowComputedStylesProps {\n  children?: RenderFn;\n  render?: RenderFn;\n  stylesToCompute: string[];\n  tag: string;\n  [key: string]: any;\n}\n\nexport interface IShowComputedStylesState {\n  computedStyles: IRenderFnParameter['computedStyles'];\n}\n\nclass ShowComputedStyles extends React.Component<\n  IShowComputedStylesProps,\n  IShowComputedStylesState\n> {\n  public static displayName = 'ShowComputedStyles';\n\n  public static defaultProps: Partial<IShowComputedStylesProps> = {\n    stylesToCompute: [],\n    tag: 'div',\n  };\n\n  private elem: HTMLElement;\n\n  private constructor(props: IShowComputedStylesProps) {\n    super(props);\n\n    this.state = {computedStyles: {}};\n  }\n\n  public componentDidMount() {\n    const {stylesToCompute} = this.props;\n\n    const el = this.elem.children[0];\n\n    if (!(el instanceof HTMLElement)) {\n      throw new Error(\n        `ShowComputedStyles requires 'children', or 'render' to return an HTML element. Got: ${el}`,\n      );\n    }\n\n    const cssDeclaration: CSSStyleDeclaration = window.getComputedStyle(el);\n    const computedStyles = stylesToCompute.reduce(\n      (acc, property) => ({\n        ...acc,\n        [property]: cssDeclaration[property as any],\n      }),\n      {},\n    );\n\n    this.setState({computedStyles});\n  }\n\n  public render() {\n    const {computedStyles} = this.state;\n    const {children, render, stylesToCompute, tag, ...restProps} = this.props;\n    const Tag = tag as string;\n    const renderFn = children || render;\n\n    return (\n      <Tag {...restProps} ref={this.setElemRef}>\n        {(renderFn as RenderFn)({computedStyles})}\n      </Tag>\n    );\n  }\n\n  private setElemRef = (elem: HTMLElement) => {\n    this.elem = elem;\n  };\n}\n\nexport default ShowComputedStyles;\n"],"mappings":"AAAA","sourceRoot":""}